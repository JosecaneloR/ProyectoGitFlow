<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="botonCerrarSesion.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAYpJREFUaEPtmbtKxEAYRiOClVqohY0iXvAF7HwGK0HBwt5ea9u1EV9BULD3EUSx
        8FIINl5B9BGsBD1flsCyRJjMziQZ+A+cYgY283/ZTDKTZIZheDGCB/iFvxH9wQdcwyh0sGzgWCrQCgbn
        EzXAat6KxzAeocY6VEdoijNVB5uosc7yVmAsiAcWxAUL4oEFccGCeGBBXGg6yD6e4GjeGoA6g2xgf5Bb
        VN8FjqnDlzqDzKAKXs9bXebxHVXDJY6jF3UG+Y9ZfEHVcYMTWJk2BBEK84yqRZfbJFaiLUGELr0nVD33
        WClMm4KIaXzEIswUOhEyiCZrcbxQXqMTxQ9CoDtSbxEhbCRICPrnSSOX1qD03rnuMMnJ3vssSfb2O4ev
        qDqSeCAuoN42buetLkv4gaohmSVK2aJRE1p9SS0ay5bxu3iMSS3jbYfoggXxwIK4YEE8sCAuWBAPogZ5
        Qx18C/WOKZaLeIoaS1+Sg7OHxb9Sh9+4jMEZwh28Qm1sYqnt6zlG+cZuGEZBlv0BSNM/OImHGegAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="botonBuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAjFJREFUaEPtl8suxVAUhk/cJm4jEq+Ad8DcAMETSIS4P4WYeQa39yAewCVBXMaM
        GTDi/5qzkmZrz2mrPW1lf8mX2Lvt6l7a7rVOw+PxeDxlcym/HS9k7XCTMGuHu3B3zNOxuaoY+cbYQcMd
        VzGRc/mLqBOxdkT9xyMz9ng89cZX9qrhLtwd+8peoL6yezyeztInl+WpvJcfTfn7RHKMc1LR6cq+IJ+l
        e0/XJzkvExMVBPOmSx5Ii38lt+S47G86IbfltbTz9iXXtsUuMNxx1BNL6psclmBJfMpV2WpxHFuTnMs1
        JNMWu6nhjv9S2Vck8DoxZmFTTCRkWloyc0y0InzjsHnBR2vfBE8iLeuSax9lLxNxFF3Z2YGIyTeR6F13
        6JY3khiLTJTFmWQRm8EoGzuSGMfBqCQeJItgd8oKuxkxqDOl8S5ZxEAwysagJAaxSiOPRIZk20SKrux5
        vFqTkhjsXLGEEwibF/ROxKNiZ2VPEuMoGMXgLtwdZ63shxJs+6XtyLr93kpiLDERh93YcMdZK/ur7JEU
        RBpA5mg70rIhufZFEi+W8M3D5gldLDFpN2g7kjIjvyTXzjLRiqIru0HjR2ySoe3glYmDYzwJS4Lmc0RW
        Ar4PSwZpO6jYFDu2ZmR32pX2TVgSdv6orAx0sWyjttA4+SZ4nXgS1mtVLhm6WBpAeqc7SaHjpy4JssWy
        O4U/bBZf2WTSwpOxX44kPyZry79KJvyasfvVGpJRcW00fgDEjM2ng7R/HgAAAABJRU5ErkJggg==
</value>
  </data>
</root>